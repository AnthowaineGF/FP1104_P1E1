BIOGRAFIA DE ADA LOVELACE
“Esta máquina puede hacer cualquier cosa que sepamos cómo ordenarle que la ejecute…”. La frase pertenece aAda Lovelace, la primera programadora de ordenadores de la historia, que escribió y publicó algoritmos para laMáquina Analítica de Charles Babbage en 1843. Hija del poeta inglés Lord Byron, Ada ha recibido un gran reconocimiento por la labor desarrollada en el mundo de la informática.
Augusta Ada Byron King nació un 18 de diciembre de 1815, fruto de la relación del poeta romántico Lord George Gordon Byron y Anna Isabella Milbanke Byron. A pesar de ser una hija legítima, casi no tuvo relación con Lord Byron debido a que se separó de su madre cuando la niña tenía unos dos meses de edad. En 1835, Ada se casó con William King, quien en ese momento era barón de King y más tarde seria nombrado Conde de Lovelace. Así fue como su nombre (de casada) pasó a ser Lady Augusta Ada Byron King, Condesa de Lovelace, cuya denominación moderna más corta es Ada Lovelace. Esta extraordinaria mujer creció, vivió y murió -en 1852- en Inglaterra.
Ada Lovelace es considerada la primera persona que programó una máquina. Es muy posible que el encono que tenía su madre con Lord Byron, luego de que sus caminos se separasen, haya sido en gran medida responsable del rumbo que tomó la vida de Ada. En efecto, su madre comenzó a educar a la pequeña lo más lejos posible de la literatura. Anna Isabella suponía que si acercaba a su hija a las ciencias, de alguna manera la estaría alejando de su padre, y así fue como la niña comenzó a estudiar con August Morgan -el primerprofesor de matemáticas de la Universidad de Londres– como tutor. Por su intermedio conoció y se hizo amiga de Mary Sommerville, una brillante matemática, hecho que seguramente también influyó en su amor por la lógica.
En 1833, Ada Lovelace fue presentada en sociedad, por lo que comenzó frecuentar fiestas, teatros, y demás eventos a los que iban las jovencitas de su edad. La Inglaterra de la primera mitad del sigo XIX era una ciudad llena de gente interesante, y Ada conoció a David Brewster (el físico Británico que inventó el caleidoscopio), a Charles Wheatstone (físico famoso por sus trabajos con la electricidad), a Michael Faraday (inventor del motor eléctrico, el generador y la dinamo) y al escritor Charles Dickens. Pero el encuentro que cambiaría su vida tendría lugar en una conferencia dictada por un escritor y científico irlandés llamado Dionysus Ladner. En esa reunión fue presentada a Charles Babbage, un matemático y científico inglés, que estaba diseñando una“máquina analítica”capaz de ser programada para ejecutar diferentes algoritmos y resolver cualquier clase de problema, y que funcionaba según los mismos principios lógicos que los ordenadores actuales.
Ada quedó deslumbrada por la mente de Babbage -algunos historiadores insisten en que además fueron amantes– y rápidamente se puso al tanto de los pormenores de la Máquina Analítica, estimulada por las posibilidades que ofrecía un aparato semejante. Por su parte, Charles Babbage encontró el apoyo matemático perfecto en Ada. Tan impresionado estaba con su talento, que aceptó que fuese su discípula y, más tarde, su colaboradora. Como parte de su trabajo con Babbage, Ada tuvo que traducir y analizar escritos de otros cientificos. La primera publicación que Ada realizó fue una traducción de un artículo escrito por el matemático italiano Luigi F. Menabrea (originalmente en francés) acerca de la Máquina Analítica de Charles, al que Ada le agregó un análisis del funcionamiento de la misma.
Cuando se encontraba realizando esas tareas concibió lo que luego llamaría “un plan” capaz de hacer que la máquina ideada por Charles pudiese ser reconfigurada para calcular números de Bernoulli a través del uso de tarjetas perforadas. Hoy día ese “plan” es considerado el primer programa de ordenador -escrito unos 100 años antes de que se fabricase el primero de ellos-,  por lo que Ada Lovelace es considerada como la primera persona en describir un lenguaje de programación de carácter general. Poco tiempo después aportó a la informática conceptos como “bucle” (un grupo de instrucciones que se ejecutan varias veces) o “subrutina” (un trozo de programa que puede ser invocado cuando se lo necesita). También inventó una forma para describir algoritmos en la Máquina Analítica, creando así el primer lenguaje de programación.
No hay que olvidar que Ada vivió en la época victoriana, donde era muy poco habitual -e incluso hasta mal visto- que una mujer se ocupase de estos temas. El mismo Babbage nombraba a Ada en sus publicaciones como una simple transcriptora, restando de esta forma importancia a los aportes de su amiga, no porque el lo quisiera, sino porque las costumbres de la época lo obligaban. Ada sabía que sus aportes no serían apreciados hasta muchos años después, así que reunió sus apuntes -enriquecidos con inscripciones, demostraciones y análisis de sus investigaciones- y los publicó con las iniciales “A.A.L.” En 1843 escribió un artículo que incluía demostraciones de cómo calcular funciones trigonométricas con variables y los programas necesarios para que la Máquina Analítica los hiciese funcionar. Este artículo, publicado bajo el título de "Notas", fue extendido y refinado décadas más tarde por John Vonn Newmann y Alan Turing.
Ada Lovelace murió de cáncer el 27 de noviembre de 1852 a los 36 años. Como reconocimiento a su trabajo existe un lenguaje de programación que lleve su nombre, basado en Pascal y creado en 1979 por elDepartamento de Defensa de Estado Unidos. El “Lenguaje de Programación ADA” se utiliza principalmente en aquellos entornos en los que resulta indispensable una gran seguridad y fiabilidad, por lo que es el elegido por los departamentos de defensa, la industria aeronáutica y la industria aeroespacial, entre otros.

DEFINICIÓN DE ALGORITMO
En el árabe es donde podemos encontrar el origen etimológico del término algoritmo que ahora vamos a analizar en profundidad. Más exactamente se halla en el nombre del matemático Al-Khwarizmi, que nació en la Edad Media en una de las zonas de lo que hoy se conoce como Uzbiekistán, en Asia central En Bagdad fue donde este desarrolló gran parte de su carrera y es que hasta allí se trasladó para, por orden del califa, crear un centro superior de investigaciones científicas que se dio en llamar Casa de la Sabiduría. Diversos tratados de álgebra o astronomía fueron algunos de los trabajos que realizó dicho sabio que también ha dado lugar a la creación de otra serie de términos científicos tales como álgebra o guarismo.
Tal fue la importancia que tuvo dicho personaje histórico que actualmente está considerado no sólo como el padre del álgebra sino también como quien se encargó de introducir nuestro sistema de numeración. 
Se denomina algoritmo a un grupo finito de operaciones organizadas de manera lógica y ordenada que permite solucionar un determinado problema. Se trata de una serie de instrucciones o reglas establecidas que, por medio de una sucesión de pasos, permiten arribar a un resultado o solución.
Según los expertos en matemática, los algoritmos permiten trabajar a partir de un estado básico o inicial y, tras seguir los pasos propuestos, llegar a una solución. Cabe resaltar que, si bien los algoritmos suelen estar asociados al ámbito matemático (ya que permiten, por citar casos concretos, averiguar el cociente entre un par de dígitos o determinar cuál es el máximo común divisor entre dos cifras pertenecientes al grupo de los enteros), aunque no siempre implican la presencia de números.
Además de todo lo expuesto, en el ámbito matemático, y cuando estamos decididos a llevar a cabo la descripción de uno de esos algoritmos hay que tener en cuenta que se puede efectuar mediante tres niveles. Así, en primer lugar, nos encontramos con el de alto nivel, lo que es la descripción formal y finalmente la tarea de implementación.
Asimismo tampoco podemos pasar por alto que los algoritmos se pueden expresar a través de lenguajes de programación, pseudocódigo, el lenguaje natural y también a través de los conocidos como diagramas de flujo.
Un manual de instrucciones para el funcionamiento de un electrodoméstico y una serie de órdenes del jefe a un empleado para desarrollar una cierta tarea también pueden incluir algoritmos.
Esta amplitud de significado permite apreciar que no existe una definición formal y única de algoritmo. El término suele ser señalado como el número fijo de pasos necesarios para transformar información de entrada (un problema) en una salida (su solución). De todas formas, algunos algoritmos carecen de final o no resuelven un problema en particular.
Existen ciertas propiedades que alcanzan a todos los algoritmos, con excepción de los denominados algoritmos paralelos: el tiempo secuencial (los algoritmos funcionan paso a paso), el estado abstracto (cada algoritmo es independiente de su implementación) y la exploración acotada (la transición entre estados queda determinada por una descripción finita y fija).
Cabe mencionar por último que los algoritmos son muy importantes en la informática ya que permiten representar datos como secuencias de bits. Un programa es un algoritmo que indica a la computadora qué pasos específicos debe seguir para desarrollar una tarea.

Cuestiones generales
¿Qué significa?
En la cultura popular, divide y vencerás hace referencia a un refrán que implica resolver un problema difícil.
Se divide en partes más simples tantas veces como sea necesario, hasta que la resolución de las partes se torna obvia.
La solución del problema principal se construye con las soluciones encontradas.
En las ciencias de la informática, el termino de “Divide y Vencerás” hace referencia a un importante paradigma del diseño de algoritmos.
El método esta basado en la resolución recursiva de un problema dividiendo en dos o mas subproblemas de igual tipo.
El proceso de división continua hasta que estos lleguen a ser lo suficientemente sencillos como para que se resuelvan directamente.
Al final, las soluciones a cada uno de los subproblemas se combinan para dar una solución al problema original

La técnica de diseño de algoritmos llamada "divide y vencerás" (divide and conquer) consiste en descomponer el problema original en varios sub-problemas más sencillos, para luego resolver éstos mediante un cálculo sencillo. Por último, se combinan los resultados de cada sub-problema para obtener la solución del problema original. El pseudocódigo sería:
funcion divide_y_venceras_1(problema)
{
   descomponer el problema en n subproblemas más pequeños;
   para i=1 hasta n hacer
      resolver el subproblema k;
   combinar las n soluciones;
 }
Un ejemplo de "divide y vencerás" es la ordenación rápida, o quicksort, utilizada para ordenar arrays. En ella, se dividía el array en dos sub-arrays, para luego resolver cada uno por separado, y unirlos (ver algoritmos de ordenación). El ahorro de tiempo es grande: el tiempo necesario para ordenar un array de elementos mediante el método de la burbuja es cuadrático: kN2. Si dividimos el array en dos y ordenamos cada uno de ellos, el tiempo necesario para resolverlo es ahora k(N/2)2+k(N/2)2=(kN2)/2. El tiempo necesario para ordenarlo es la mitad, pero sigue siendo cuadrático.
Pero ahora, si los subproblemas son todavía demasiado grandes, ¿por qué no utilizar la misma táctica con ellos, esto es, dividirlos a ellos también, utilizando un algoritmo recursivo (ver recursividad) que vaya dividiendo más el sub-problema hasta que su solución sea trivial? Un algoritmo del tipo:
funcion divide_y_venceras(problema)
{
   si el problema es trivial
      entonces resolver el problema;
   si no es trivial
   {
      descomponer el problema en n subproblemas más pequeños;
      para i=1 hasta n hacer
         divide_y_venceras(subproblema_k);
      combinar las n soluciones;
    }
 }
 
 FLOR 100-3/(sqrt(x^2+y^2))+sin(sqrt(x^2+y^2))+sqrt(200-
(x^2+y^2)+10*sin(x)+10sin(y))/1000, x is from -15 to 15, y is from -15 to 15, z is from
90 to 101
10.
